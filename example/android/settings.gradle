pluginManagement {
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
}

dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
    repositories {
        google()
        mavenCentral()
    }
}

rootProject.name = 'android'
include ':app'

def flutterProjectRoot = rootProject.projectDir.parentFile.toPath()

def plugins = new Properties()
def pluginsFile = new File(flutterProjectRoot.toFile(), '.flutter-plugins')
if (pluginsFile.exists()) {
    pluginsFile.withReader('UTF-8') { reader -> plugins.load(reader) }
}

plugins.each { name, path ->
    def pluginDirectory = flutterProjectRoot.resolve(path).resolve('android').toFile()
    include ":$name"
    project(":$name").projectDir = pluginDirectory
}

// This is the new way to load Flutter plugins
def flutterSdkPath = System.getenv('FLUTTER_ROOT') ?: System.getenv('FLUTTER_HOME')
if (flutterSdkPath == null) {
    def localPropertiesFile = new File(rootProject.projectDir, "local.properties")
    def properties = new Properties()
    if (localPropertiesFile.exists()) {
        localPropertiesFile.withReader("UTF-8") { reader -> properties.load(reader) }
        flutterSdkPath = properties.getProperty("flutter.sdk")
    }
}

if (flutterSdkPath == null) {
    throw new Exception("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

apply from: "${flutterSdkPath}/packages/flutter_tools/gradle/app_plugin_loader.gradle"
